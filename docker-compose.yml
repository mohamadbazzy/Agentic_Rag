version: '3.8'

services:
  # Supervisor, MSFEA, Petition, and Schedule Helper
  supervisor:
    build:
      context: .
      dockerfile: docker/supervisor/Dockerfile
    env_file: .env
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Department Agents
  departments:
    build:
      context: .
      dockerfile: docker/departments/Dockerfile
    env_file: .env
    depends_on:
      - backend
      - supervisor
    networks:
      - app-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Backend and Vector DB
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./Scraper/output:/app/Scraper/output
    networks:
      - app-network
    restart: unless-stopped

  # Scraper service updated to use the new Dockerfile location
  scraper:
    build:
      context: .
      dockerfile: docker/scraper/Dockerfile
    env_file: .env
    depends_on:
      - backend
    volumes:
      - ./Scraper/output:/app/Scraper/output
      - ./Scraper/logs:/app/logs
    networks:
      - app-network
    command: ["--output-dir", "/app/Scraper/output"]
    deploy:
       restart_policy:
         condition: none
         

  # WhatsApp service
  whatsapp:
    build:
      context: .
      dockerfile: docker/whatsapp/Dockerfile
    env_file: .env
    ports:
      - "8001:8000"  # Use a different port to avoid conflict with backend
    volumes:
      - ./Scraper/output:/app/Scraper/output
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge 